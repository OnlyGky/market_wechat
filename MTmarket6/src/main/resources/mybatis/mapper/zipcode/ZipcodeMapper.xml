<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.in.market.dao.zipcode.ZipcodeDao">
    <resultMap id="BaseResultMap" type="com.in.market.pojo.zipcode.Zipcode">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="area_Id" jdbcType="VARCHAR" property="areaId" />
        <result column="zip" jdbcType="VARCHAR" property="zip" />
        <result column="code" jdbcType="VARCHAR" property="code" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, area_Id, zip, code
    </sql>
    <select id="selectByExample" parameterType="com.in.market.pojo.zipcode.ZipcodeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from zipcode
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from zipcode
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from zipcode
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.in.market.pojo.zipcode.ZipcodeExample">
        delete from zipcode
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.in.market.pojo.zipcode.Zipcode">
        insert into zipcode (id, area_Id, zip,
                             code)
        values (#{id,jdbcType=INTEGER}, #{areaId,jdbcType=VARCHAR}, #{zip,jdbcType=VARCHAR},
                #{code,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.in.market.pojo.zipcode.Zipcode">
        insert into zipcode
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="areaId != null">
                area_Id,
            </if>
            <if test="zip != null">
                zip,
            </if>
            <if test="code != null">
                code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="zip != null">
                #{zip,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.in.market.pojo.zipcode.ZipcodeExample" resultType="java.lang.Long">
        select count(*) from zipcode
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update zipcode
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.areaId != null">
                area_Id = #{record.areaId,jdbcType=VARCHAR},
            </if>
            <if test="record.zip != null">
                zip = #{record.zip,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update zipcode
        set id = #{record.id,jdbcType=INTEGER},
        area_Id = #{record.areaId,jdbcType=VARCHAR},
        zip = #{record.zip,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.in.market.pojo.zipcode.Zipcode">
        update zipcode
        <set>
            <if test="areaId != null">
                area_Id = #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="zip != null">
                zip = #{zip,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.in.market.pojo.zipcode.Zipcode">
        update zipcode
        set area_Id = #{areaId,jdbcType=VARCHAR},
            zip = #{zip,jdbcType=VARCHAR},
            code = #{code,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="queryZipByAreaId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from zipcode where area_id=#{areaId}
    </select>
</mapper>